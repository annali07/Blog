{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annaz\\\\Desktop\\\\nana14\\\\frontend\\\\src\\\\api\\\\FetchIP.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FetchIP() {\n  _s();\n  const [userTime, setUserTime] = useState(\"\");\n  const [userTimezone, setUserTimezone] = useState(\"\");\n  useEffect(() => {\n    const options = {\n      timeZone: userTimezone,\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    };\n    fetch(\"http://ip-api.com/json/?fields=3195137\").then(res => res.json()).then(res => {\n      setUserTimezone(res.timeZone);\n      const localTime = new Date().toLocaleString(undefined, options);\n      setUserTime(localTime);\n    });\n  }, [userTimezone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Visitor's Local Time: \", new Date(userTime).getHours()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchIP, \"HB8esfo5zfqlCRNKESQ9tFVAjRo=\");\n_c = FetchIP;\nvar _c;\n$RefreshReg$(_c, \"FetchIP\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchIP","_s","userTime","setUserTime","userTimezone","setUserTimezone","options","timeZone","weekday","year","month","day","hour","minute","second","fetch","then","res","json","localTime","Date","toLocaleString","undefined","children","getHours","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/annaz/Desktop/nana14/frontend/src/api/FetchIP.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function FetchIP() {\r\n  const [userTime, setUserTime] = useState(\"\");\r\n  const [userTimezone, setUserTimezone] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      timeZone: userTimezone,\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    };\r\n\r\n    fetch(\"http://ip-api.com/json/?fields=3195137\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setUserTimezone(res.timeZone);\r\n        const localTime = new Date().toLocaleString(undefined, options);\r\n        setUserTime(localTime); \r\n      });\r\n  }, [userTimezone]);\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <p>Visitor's Local Time: {new Date(userTime).getHours()}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAG;MACdC,QAAQ,EAAEH,YAAY;MACtBI,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC;IAEDC,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACbZ,eAAe,CAACY,GAAG,CAACV,QAAQ,CAAC;MAC7B,MAAMY,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAACC,SAAS,EAAEhB,OAAO,CAAC;MAC/DH,WAAW,CAACgB,SAAS,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAGlB,oBACEL,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAAwB,QAAA,GAAG,wBAAsB,EAAC,IAAIH,IAAI,CAAClB,QAAQ,CAAC,CAACsB,QAAQ,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAAC3B,EAAA,CA/BuBD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}